@model EntityLayer.Concrete.Writer

@{
    ViewBag.Title = "WriterUpdate";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>WriterUpdate</h2>

@using (Html.BeginForm("WriterUpdate", "Writer", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Writer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">

        @Html.HiddenFor(model => model.WriterID)
        @Html.LabelFor(model => model.WriterName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WriterSurname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterSurname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterSurname, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.WriterMail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterMail, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterMail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WriterPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WriterAbout, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.WriterAbout, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.WriterAbout, "", new { @class = "text-danger" })
        </div>
       <div>
        <img src="~/Content/images/@Model.WriterImage" style="width:75px;height:75px">
        <div class="form-group">
            <input type="file" name="ImageFile" required />
        </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Güncelle" class="btn btn-default" />
            </div>
        </div>
    </div>
    </div>
}
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
@if (ViewBag.Status == true)
{
    <script>
        swal({
            title: "Bilgi",
            text: "Günceleme İşlemi başarılı",
            icon: "success",
            buttons: "Tamam"
        })
        setTimeout(yonlendir, 3000);
        function yonlendir() {
            location.assign("/Writer/Index");
        }
    </script>
}

